{"version":3,"sources":["serviceWorker.js","Components/AutoComplete.js","Components/Search.js","Components/BackgroundImage.js","Components/LandingPage.js","Home.js","Components/Parks/Activities.js","Components/Parks/Topics.js","Components/Parks/Location.js","Components/Hero/Hero.js","Components/Hero/HeroOptions.js","services/url.js","Components/Parks/Trail.js","Components/Parks/Hiking.js","ParkPage.js","Components/NavBar.js","Routes.js","services/history.js","Main.js","index.js"],"names":["Boolean","window","location","hostname","match","AutoComplete","onChange","e","options","props","userInput","currentTarget","value","filteredOptions","filter","f","toLowerCase","indexOf","i","setState","actionOption","showOptions","onKeyDown","state","keyCode","showSuggestions","length","getOptionList","optionList","activeOption","className","map","optionName","index","data-val","key","onClick","onSubmit","filtered","this","type","React","Component","memo","children","src","style","background","backgroundSize","backgroundPosition","useState","data","setData","parkFound","setFound","newParkData","setParkData","useEffect","newData","parkData","m","CSSTransition","classNames","val","target","dataset","console","log","process","REACT_APP_API_URL","fetch","then","res","json","Number","total","park","fullName","includes","parkCode","alert","to","pathname","Activities","params","activities","name","Topics","topics","Location","Hero","isFull","center","HeroHOC","component","baseClass","other","appearIn","setAppearIn","in","timeout","HeroTitle","addClass","HeroSubtitle","HeroContainer","HeroDescription","HeroOverlay","Title","Subtitle","Container","Description","Overlay","HeroOptions","defaultProps","API_URL","Trail","Detail","dataPoint","icon","Image","imgMedium","alt","Rating","Info","isOpen","setOpenStatus","title","ascent","TrailContainer","item","stars","lat","long","trails","ParkPage","initData","parkID","randomNum","min","max","Math","round","random","selectHeroBackground","imgs","url","Object","keys","images","designation","description","addresses","latitude","longitude","NavBar","Routes","exact","path","Home","history","createBrowserHistory","Main","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.aab140ab.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nclass AutoComplete extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            actionOption: 0,\r\n            filtered: [],\r\n            showOptions: false,\r\n            userInput: \"\"\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        const { options } = this.props;\r\n        const userInput = e.currentTarget.value;\r\n        const filteredOptions = options.filter(f => {\r\n            return f.toLowerCase().indexOf(userInput.toLowerCase()) > -1\r\n        }).filter((f, i) => i < 4);\r\n\r\n        this.setState({\r\n            actionOption: 0,\r\n            filteredOptions,\r\n            showOptions: true,\r\n            userInput\r\n        });\r\n    }\r\n\r\n    onKeyDown = (e) => {\r\n        const { actionOption, filteredOptions } = this.state;\r\n        if (e.keyCode === 13) {\r\n            this.setState({\r\n                actionOption: 0,\r\n                showSuggestions: false,\r\n                userInput: filteredOptions[actionOption]\r\n            });\r\n        } else if (e.keyCode === 38) {\r\n            if (actionOption === 0) {\r\n                return false\r\n            };\r\n\r\n            this.setState({\r\n                actionOption: actionOption - 1\r\n            })\r\n        } else if (e.keyCode === 40) {\r\n            if (actionOption - 1 === filteredOptions.length) {\r\n                return;\r\n            }\r\n            this.setState({\r\n                actionOption: actionOption + 1\r\n            })\r\n        }\r\n    }\r\n\r\n    getOptionList = () => {\r\n        const { showOptions, userInput, filteredOptions, activeOption } = this.state;\r\n        let optionList;\r\n        if (showOptions && userInput) {\r\n            if (filteredOptions.length) {\r\n                optionList = (\r\n                    <ul className=\"searchBar_options\">\r\n                        {filteredOptions.map((optionName, index) => {\r\n                            let className;\r\n                            if (index === activeOption) {\r\n                                className = 'option-active';\r\n                            }\r\n                            return (\r\n                                <li data-val={optionName} className={className} key={optionName} onClick={this.props.onSubmit}>\r\n                                    {optionName}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                );\r\n            } else {\r\n                optionList = (\r\n                    <div className=\"no-options\">\r\n                        <em>No Option!</em>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n\r\n        }\r\n        return optionList;\r\n    }\r\n\r\n    render() {\r\n        const { userInput } = this.state;\r\n        const optionList = this.getOptionList();\r\n\r\n        return (\r\n            <div className={\"searchBar\"}>                  \r\n                <input\r\n                    type={\"text\"}\r\n                    className={\"searchBar_box\"}\r\n                    onChange={this.onChange}\r\n                    onKeyDown={this.onKeyDown}\r\n                    value={userInput}\r\n                />\r\n                <button type={\"button\"} data-val={userInput} className={\"searchBar_btn\"} onClick={this.props.onSubmit}>\r\n                    Search\r\n                </button>                \r\n                {optionList}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AutoComplete;","import React from 'react';\r\n\r\nconst Search = ({children}) => {\r\n    return (\r\n        <div className={\"search\"}>\r\n            <div className={\"search-card\"}>\r\n                <h2 className={\"search-card_title\"}>\r\n                    FInd Your Park\r\n                </h2>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Search);","import React from 'react';\r\n\r\nconst BackgroundImage = ({ src, children }) => {\r\n    return (\r\n        <>\r\n            <div className={\"background-image\"}\r\n                style={{\r\n                    background: `linear-gradient(0deg, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.6)), url(${src})`,\r\n                    backgroundSize: \"cover\",\r\n                    backgroundPosition: \"center center\"\r\n                }}\r\n            />\r\n            {children}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default React.memo(BackgroundImage);\r\n","import React from 'react';\r\nimport BackgroundImage from './BackgroundImage';\r\n\r\nconst LandingPage = ({children}) => {\r\n    return (\r\n        <section className={\"page\"}>\r\n            <BackgroundImage src={\"https://news.harvard.edu/wp-content/uploads/2019/09/leo-serrat_unsplash-1.jpg?w=1600&h=900&crop=1\"}>\r\n                <div className={\"page-content\"}>\r\n                    {children}\r\n                </div>\r\n            </BackgroundImage>                      \r\n        </section>\r\n    );\r\n};\r\n\r\nexport default React.memo(LandingPage);\r\n","import React, { useEffect, useState } from 'react';\r\nimport parkData from './data/parkData.json';\r\nimport AutoComplete from './Components/AutoComplete';\r\nimport { Redirect } from 'react-router';\r\nimport Search from './Components/Search';\r\nimport LandingPage from './Components/LandingPage';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nconst Home = () => {\r\n    const [data, setData] = useState(false);\r\n    const [parkFound, setFound] = useState(false);\r\n    const [newParkData, setParkData] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const newData = parkData.map(m => m[\"Location Name\"]);\r\n        setData(newData);\r\n    }, []);\r\n\r\n    const validate = (e) => {\r\n        const { val } = e.target.dataset;\r\n        console.log(process.env.REACT_APP_API_URL);\r\n        fetch(`https://national-parks-api.herokuapp.com/findPark/${val}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (Number(data.total) > 0) {\r\n                    console.log(data);\r\n                    const park = data.data.filter(f => f.fullName.includes(val))[0];\r\n                    console.log(park);\r\n                    if (park) {\r\n                        setFound(park.parkCode);\r\n                        setParkData(park);\r\n                        return;\r\n                    }\r\n                    alert(\"No parks were found! Please search again\");                    \r\n                } else {\r\n                    alert(\"No parks were found! Please search again\")\r\n                }\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {data &&\r\n                <CSSTransition\r\n                    classNames={\"example\"}\r\n                >\r\n                <div className={\"example\"}>\r\n                    <LandingPage>\r\n                        <Search>\r\n                            <AutoComplete\r\n                                options={data}\r\n                                onSubmit={validate}\r\n                            />\r\n                        </Search>\r\n                    </LandingPage>\r\n                </div>\r\n                </CSSTransition>\r\n                             \r\n            }\r\n            {parkFound && <Redirect to={{\r\n                pathname: `/info/${parkFound}`,\r\n                state: {\r\n                    data: newParkData\r\n                }\r\n            }} />}\r\n        </>\r\n    );  \r\n}\r\n\r\nexport default React.memo(Home);","import React from 'react';\r\n\r\nexport default function Activities (params) {    \r\n    return (\r\n        <section>\r\n        <h2>\r\n            Activities\r\n        </h2>\r\n        <ul>\r\n            {params.activities.map(m => {\r\n                return <li>\r\n                    {m.name}\r\n                </li>;\r\n            })}\r\n        </ul>\r\n        </section>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Topics(params) {\r\n    return (\r\n        <section>\r\n            <h2>Topics</h2>\r\n            <ul>\r\n                {params.topics.map(m => {\r\n                    return <li>\r\n                        {m.name}\r\n                    </li>\r\n                })}\r\n            </ul>\r\n        </section>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Location (params) {\r\n    return (\r\n        <section className={\"section section_fill-white\"}>\r\n          Location Component?\r\n        </section>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nconst Hero = (props) => {\r\n    const { isFull, center } = props;\r\n    return (\r\n        <section className={`section-hero ${isFull && \"section-hero_full\"} ${center && \"section-hero_center\"}`}>\r\n            {props.children}\r\n        </section>\r\n    )\r\n}\r\n\r\nconst HeroHOC = ({ component: Component, baseClass, ...other}) => {\r\n    //can put a transition in there using baseClass    \r\n    const [appearIn, setAppearIn] = useState(false);\r\n    useEffect(() => {\r\n        setAppearIn(true);\r\n    }, []);\r\n    \r\n    return (\r\n        <CSSTransition  \r\n            in={appearIn}          \r\n            timeout={150}\r\n            key={baseClass}\r\n            classNames={baseClass}                     \r\n        >\r\n            <Component baseClass={baseClass} {...other} />\r\n        </CSSTransition>\r\n    );\r\n};\r\n\r\nconst HeroTitle = ({baseClass, addClass = \"\", children}) => {\r\n    return (\r\n        <h1 className={`${baseClass} ${addClass}`}>\r\n            {children}\r\n        </h1>\r\n    )\r\n}\r\n\r\nconst HeroSubtitle = ({baseClass, addClass = \"\", children}) => {\r\n    return (\r\n        <h2 className={`${baseClass} ${addClass}`}>\r\n            {children}\r\n        </h2>\r\n    )\r\n};\r\n\r\nconst HeroContainer = ({baseClass, addClass = \"\", children}) => {\r\n    return (\r\n        <div className={`${baseClass} ${addClass}`}>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst HeroDescription = ({baseClass, addClass = \"\", children}) => {\r\n    return (\r\n        <p className={`${baseClass} ${addClass}`}>\r\n            {children}\r\n        </p>\r\n    );\r\n}\r\n\r\nconst HeroOverlay = ({addClass, children}) => {\r\n    return (\r\n        <div className={\"section-hero_overlay\"} />\r\n    );\r\n}\r\n\r\nHero.Title = (props) => <HeroHOC component={HeroTitle} baseClass={\"hero-content_title\"} {...props} />;\r\nHero.Subtitle = (props) => <HeroHOC component={HeroSubtitle} baseClass={\"hero-content_subtitle\"} {...props} />;\r\nHero.Container = (props) => <HeroHOC component={HeroContainer} baseClass={\"section-hero_content hero-content\"} {...props} />;\r\nHero.Description = (props) => <HeroHOC component={HeroDescription} baseClass={\"hero-content_description\"} {...props} />;\r\nHero.Overlay = (props) => <HeroHOC component={HeroOverlay} baseClass={\"section-hero_overlay\"} {...props} />;\r\n\r\nexport default Hero;\r\n\r\n\r\nHero.defaultProps = {\r\n    isFull: false,\r\n    center: false,\r\n}","import React from 'react';\r\n\r\nexport default function HeroOptions({ data }) {\r\n    return (\r\n        <div className={\"row hero-content_options\"}>\r\n            <div className={\"col-3\"}>\r\n                <p>News</p>\r\n            </div>\r\n            <div className={\"col-3\"}>\r\n                <p>Activities</p>\r\n            </div>\r\n            <div className={\"col-3\"}>\r\n                <p>Hiking</p>\r\n            </div>\r\n            <div className={\"col-3\"}>\r\n                <p>Location & Hours</p>\r\n            </div>\r\n        </div>  \r\n    );\r\n}\r\n","export const API_URL = \"https://national-parks-api.herokuapp.com\";","import React, { useState } from 'react';\r\nimport { ChevronDown, ChevronUp, Map, Rulers, Triangle } from 'react-bootstrap-icons';\r\n\r\nconst Title = ({children}) => {\r\n    return <h3 className={\"trail__title\"}>{children}</h3>;\r\n};\r\n\r\nconst Subtitle = ({children}) => {\r\n    return  <h4 className={\"trail__subtitle\"}>{children}</h4>;\r\n};\r\n\r\nconst Image = ({ data, children }) => {\r\n    //make custom hook to get mobile? to determine what image to use.\r\n    return <div className={\"trail__body\"}>\r\n        <img className={\"trail__image\"} src={data.imgMedium} alt={data.name} />\r\n        {children}\r\n    </div>\r\n};\r\n\r\nconst Rating = () => {\r\n    //may change this to stars?\r\n};\r\n\r\nconst Trail = (props) => {\r\n    return <div className={\"trail\"}>\r\n            {props.children}\r\n        </div>;\r\n};\r\n\r\nconst Info = ({ data, children }) => {\r\n    const [isOpen, setOpenStatus] = useState(false);\r\n\r\n    const toggleOpen = () => {\r\n        setOpenStatus(!isOpen);\r\n    }\r\n    console.log(data);\r\n    return <div className={`trail__info ${isOpen && \"trail__info--open\"}`}>        \r\n        <div className={\"trail__toggle\"} onClick={toggleOpen}>\r\n            {children}\r\n            <span className={\"trail__toggle__icon\"}>\r\n                {isOpen ? <ChevronDown /> : <ChevronUp />}\r\n            </span>\r\n        </div>\r\n        <div className={\"trail__details\"}>\r\n            <Detail \r\n                dataPoint={data.location}\r\n                icon={<Map title={\"Location\"} />}\r\n            />\r\n            <Detail\r\n                dataPoint={data.length}\r\n                icon={<Rulers title={\"Length\"} />}\r\n            />\r\n            <Detail \r\n                dataPoint={data.ascent}\r\n                icon={<Triangle title={\"Ascent\"} />}\r\n            />          \r\n        </div>\r\n    </div>\r\n}; \r\n\r\nconst Detail = ({ dataPoint, data, icon}) => {\r\n    return (\r\n        <div className={`trail__details_spec`}>\r\n            <h5>{dataPoint}</h5>\r\n            {icon}\r\n        </div>\r\n    );\r\n}\r\n\r\nTrail.Title = Title;\r\nTrail.Subtitle = Subtitle;\r\nTrail.Image = Image;\r\nTrail.Rating = Rating;\r\nTrail.Info = Info;\r\nTrail.Detail = Detail;\r\n\r\nexport const TrailContainer = ({ data }) => {\r\n    console.log(data);\r\n    return <section className={\"section section_fill-white\"}>\r\n        <div className={\"container_trail\"}>\r\n            {data.map(item =>\r\n                <Trail>\r\n                    <Trail.Image data={item}>\r\n                        <Trail.Info data={item}>\r\n                            <Trail.Title>\r\n                                {item.name}\r\n                            </Trail.Title>\r\n                            <Trail.Subtitle>\r\n                                {`Rating: ${item.stars}`}\r\n                            </Trail.Subtitle>\r\n                        </Trail.Info>\r\n                    </Trail.Image>\r\n                </Trail>\r\n            )}\r\n        </div>\r\n    </section>\r\n    //use this to render instead of having everything\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { API_URL } from '../../services/url';\r\nimport { TrailContainer } from './Trail';\r\n\r\nconst Hiking = ({lat, long}) => {\r\n    const [data, setData] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetch(`${API_URL}/get-trails?lat=${lat}&long=${long}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setData(data.trails);            \r\n            console.log(data);               \r\n        })\r\n    }, []);\r\n    \r\n    return (\r\n        <>\r\n            {data && data.length > 0 && <TrailContainer data={data} />}                \r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(Hiking);","import React from 'react';\r\nimport Activities from './Components/Parks/Activities';\r\nimport Topics from './Components/Parks/Topics';\r\nimport Location from './Components/Parks/Location';\r\nimport Hero from './Components/Hero/Hero';\r\nimport HeroOptions from './Components/Hero/HeroOptions';\r\nimport Hiking from './Components/Parks/Hiking';\r\nimport LandingPage from './Components/LandingPage';\r\nimport BackgroundImage from './Components/BackgroundImage';\r\nimport { API_URL } from './services/url';\r\n\r\nclass ParkPage extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            data: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {        \r\n        const { data } = this.props.location.state || false;\r\n        if (data) {            \r\n            this.setState({\r\n                data: data\r\n            })\r\n        } else {\r\n            this.initData();\r\n        }        \r\n    }\r\n\r\n    initData = () => {\r\n        const { parkID } = this.props.match.params;                \r\n        fetch(`${API_URL}/info/${parkID}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                this.setState({\r\n                    data: data.data[0]\r\n                });\r\n            })\r\n    }\r\n\r\n    randomNum = (min, max) => {\r\n        return Math.round(Math.random() * (max - min) + min);\r\n    }\r\n\r\n    selectHeroBackground = (imgs) => {        \r\n        return imgs[this.randomNum(0, imgs.length - 1)].url;\r\n    }\r\n\r\n    render() {\r\n        const { data } = this.state;\r\n        console.log(data);        \r\n        return (\r\n            <>\r\n                {Object.keys(data).length > 0 ?\r\n                    <>                        \r\n                            <Hero\r\n                                isFull\r\n                            >\r\n                            <BackgroundImage src={this.selectHeroBackground(data.images)}>   \r\n                                <Hero.Container>\r\n                                    <Hero.Title>\r\n                                        {data.name}\r\n                                    </Hero.Title>\r\n                                    <Hero.Subtitle>\r\n                                        {data.designation}\r\n                                    </Hero.Subtitle>\r\n                                    <Hero.Description>\r\n                                        {data.description}\r\n                                    </Hero.Description>                                   \r\n                                    <HeroOptions data={data} />\r\n                                </Hero.Container>                      \r\n                            </BackgroundImage>                                \r\n                            </Hero>                                                \r\n                        {data.addresses && <Location addresses={data.addresses} location={{lat: data.latitude, long: data.longitude}} />}\r\n                        <Hiking lat={data.latitude} long={data.longitude} />\r\n                        <section className={\"section section_fill-white\"}>\r\n                            <div className={\"container\"}>\r\n                                <div className={\"row\"}>\r\n                                    <div className={\"col-12\"}>\r\n                                        {data.activities && <Activities activities={data.activities} />}\r\n                                        {data.topics && <Topics topics={data.topics} />}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </section>                                               \r\n                    </>\r\n                    : \"No data son!\"}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ParkPage;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function NavBar () {\r\n    return (\r\n        <div className={\"container\"}>        \r\n            <div className={\"row\"}>\r\n                <div className={\"col-12\"}>\r\n                    <Link to={\"/\"} >Home</Link>                \r\n                </div>                \r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Switch, Route } from 'react-router';\r\nimport Home from './Home';\r\nimport ParkPage from './ParkPage';\r\nimport NavBar from './Components/NavBar';\r\n\r\nexport default function Routes() {\r\n    return (\r\n        <div>\r\n            <header>\r\n                <NavBar />\r\n            </header>            \r\n            <article>\r\n                <Switch>                    \r\n                    <Route exact path=\"/\" component={Home} />\r\n                    <Route exact path=\"/national-parks\" component={Home} />\r\n                    <Route path=\"/info/:parkID\" component={ParkPage} />                   \r\n                </Switch>\r\n            </article>            \r\n            <footer>\r\n                I'm a footer, bitch!\r\n            </footer>\r\n        </div>\r\n    )\r\n}","import { createBrowserHistory } from 'history';\r\nconst history = createBrowserHistory();\r\nexport default history;","import React from 'react';\r\nimport { Router } from 'react-router';\r\nimport Routes from './Routes';\r\nimport history from './services/history';\r\n\r\nclass Main extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Router history={history}>\r\n                    <Routes />\r\n                </Router>               \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Main from './Main';\r\nimport './app.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Main />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}