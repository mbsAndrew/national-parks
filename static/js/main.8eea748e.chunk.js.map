{"version":3,"sources":["serviceWorker.js","Components/AutoComplete.js","Components/Search.js","Components/BackgroundImage.js","Components/LandingPage.js","services/url.js","Home.js","util/index.js","Components/Parks/Activities/Highlight.js","Components/Parks/Activities/Toggle.js","Components/Parks/Activities/List.js","Components/Parks/Activities/Activities.js","Components/Parks/Location.js","Components/Hero/Hero.js","Components/Hero/HeroOptions.js","Components/Parks/Trail.js","Components/Parks/Hiking.js","Components/Parks/Articles/Articles.js","Components/Section.js","hooks/useScrollCheck.js","ParkPage.js","Components/NavBar.js","Components/Footer.js","Routes.js","services/history.js","Main.js","index.js"],"names":["Boolean","window","location","hostname","match","AutoComplete","onChange","e","options","props","userInput","currentTarget","value","filteredOptions","filter","f","toLowerCase","indexOf","i","setState","actionOption","showOptions","onKeyDown","state","keyCode","showSuggestions","length","getOptionList","optionList","activeOption","className","map","optionName","index","data-val","key","onClick","onSubmit","filtered","this","type","React","Component","memo","children","src","style","background","backgroundSize","backgroundPosition","API_URL","useState","data","setData","parkFound","setFound","newParkData","setParkData","useEffect","newData","parkData","m","name","code","CSSTransition","classNames","val","target","dataset","fetch","includes","getParkCode","then","res","json","Number","total","console","log","park","fullName","parkCode","alert","to","pathname","randomNum","min","max","Math","round","random","image","title","user","profile_image","instagram_username","twitter_username","referral","userLink","links","html","unsplashLink","medium","alt","href","rel","urls","regular","alt_description","Bar","Toggle","open","activities","isOpen","setOpen","returnClick","in","timeout","list","activeIndex","setIndex","activeImage","setActiveImage","images","setIndexImage","getNewImage","results","newArray","newIndex","Location","address","addresses","physicalAddress","line1","city","stateCode","Hero","isFull","center","HeroHOC","component","baseClass","other","appearIn","setAppearIn","HeroTitle","addClass","HeroSubtitle","HeroContainer","HeroDescription","HeroOverlay","Title","Subtitle","Container","Description","Overlay","HeroOptions","refData","Object","values","item","ref","text","defaultProps","Trail","Detail","dataPoint","icon","Scroll","direction","onScroll","isLeft","Image","imgMedium","Rating","Info","setOpenStatus","ascent","TrailContainer","offset","setOffset","prevState","left","right","abs","stars","lat","long","trails","parkID","articles","setArticle","page","setPage","chunks","push","splice","flat","isFeature","url","listingImage","altText","listingDescription","Section","forwardRef","isVisible","inView","setInView","current","IntersectionObserver","entries","observer","forEach","isIntersecting","unobserve","observe","useScrollCheck","ParkPage","newsRef","useRef","activitiesRef","hikingRef","locationRef","refs","NEWS","ACTIVITES","TRAIL","LOCATION","params","initData","imgs","keys","designation","description","scrollIntoView","behavior","latitude","longitude","topics","NavBar","List","ListItem","isTitle","Link","link","Footer","Routes","exact","path","Home","history","createBrowserHistory","Main","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8eea748e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nclass AutoComplete extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            actionOption: 0,\r\n            filtered: [],\r\n            showOptions: false,\r\n            userInput: \"\"\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        const { options } = this.props;\r\n        const userInput = e.currentTarget.value;\r\n        const filteredOptions = options.filter(f => {\r\n            return f.toLowerCase().indexOf(userInput.toLowerCase()) > -1\r\n        }).filter((f, i) => i < 4);\r\n\r\n        this.setState({\r\n            actionOption: 0,\r\n            filteredOptions,\r\n            showOptions: true,\r\n            userInput\r\n        });\r\n    }\r\n\r\n    onKeyDown = (e) => {\r\n        const { actionOption, filteredOptions } = this.state;\r\n        if (e.keyCode === 13) {\r\n            this.setState({\r\n                actionOption: 0,\r\n                showSuggestions: false,\r\n                userInput: filteredOptions[actionOption]\r\n            });\r\n        } else if (e.keyCode === 38) {\r\n            if (actionOption === 0) {\r\n                return false\r\n            };\r\n\r\n            this.setState({\r\n                actionOption: actionOption - 1\r\n            })\r\n        } else if (e.keyCode === 40) {\r\n            if (actionOption - 1 === filteredOptions.length) {\r\n                return;\r\n            }\r\n            this.setState({\r\n                actionOption: actionOption + 1\r\n            })\r\n        }\r\n    }\r\n\r\n    getOptionList = () => {\r\n        const { showOptions, userInput, filteredOptions, activeOption } = this.state;\r\n        let optionList;\r\n        if (showOptions && userInput) {\r\n            if (filteredOptions.length) {\r\n                optionList = (\r\n                    <ul className=\"search-bar__list\">\r\n                        {filteredOptions.map((optionName, index) => {\r\n                            let className;\r\n                            if (index === activeOption) {\r\n                                className = 'option-active';\r\n                            }\r\n                            return (\r\n                                <li data-val={optionName} className={className} key={optionName} onClick={this.props.onSubmit}>\r\n                                    {optionName}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                );\r\n            } else {\r\n                optionList = (\r\n                    <div className=\"no-options\">\r\n                        <em>No Option!</em>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n\r\n        }\r\n        return optionList;\r\n    }\r\n\r\n    render() {\r\n        const { userInput } = this.state;\r\n        const optionList = this.getOptionList();\r\n\r\n        return (\r\n            <div className={\"search-bar\"}>                  \r\n                <input\r\n                    type={\"text\"}\r\n                    className={\"search-bar__box\"}\r\n                    onChange={this.onChange}\r\n                    onKeyDown={this.onKeyDown}\r\n                    value={userInput}\r\n                />\r\n                <button type={\"button\"} data-val={userInput} className={\"search-bar__button\"} onClick={this.props.onSubmit}>\r\n                    Search\r\n                </button>\r\n                <div className={\"search-bar__results\"}>\r\n                    {optionList}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AutoComplete;","import React from 'react';\r\n\r\nconst Search = ({children}) => {\r\n    return (\r\n        <div className={\"search\"}>\r\n            <div className={\"search-card\"}>\r\n                <h2 className={\"search-card_title\"}>\r\n                    Find Your Park\r\n                </h2>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Search);","import React from 'react';\r\n\r\nconst BackgroundImage = ({ src, children }) => {\r\n    return (\r\n        <>\r\n            <div className={\"background-image\"}\r\n                style={{\r\n                    background: `linear-gradient(0deg, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.6)), url(${src})`,\r\n                    backgroundSize: \"cover\",\r\n                    backgroundPosition: \"center center\"\r\n                }}\r\n            />\r\n            {children}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default React.memo(BackgroundImage);\r\n","import React from 'react';\r\nimport BackgroundImage from './BackgroundImage';\r\n\r\nconst LandingPage = ({children}) => {\r\n    return (\r\n        <section className={\"page\"}>\r\n            <BackgroundImage src={\"https://news.harvard.edu/wp-content/uploads/2019/09/leo-serrat_unsplash-1.jpg?w=1600&h=900&crop=1\"}>\r\n                <div className={\"page-content\"}>\r\n                    {children}\r\n                </div>\r\n            </BackgroundImage>                      \r\n        </section>\r\n    );\r\n};\r\n\r\nexport default React.memo(LandingPage);\r\n","export const API_URL = process.env.NODE_ENV ===  \"development\"\r\n? \"http://localhost:1234\" \r\n: \"https://national-parks-api.herokuapp.com\";","import React, { useEffect, useState } from 'react';\r\nimport parkData from './data/parkData.json';\r\nimport AutoComplete from './Components/AutoComplete';\r\nimport { Redirect } from 'react-router';\r\nimport Search from './Components/Search';\r\nimport LandingPage from './Components/LandingPage';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { API_URL } from './services/url';\r\n\r\nconst Home = () => {\r\n    const [data, setData] = useState(false);\r\n    const [parkFound, setFound] = useState(false);\r\n    const [newParkData, setParkData] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const newData = parkData.map(m => {\r\n            return {\r\n                name: m[\"Location Name\"],\r\n                code: m[\"Location Number\"]\r\n            }\r\n        });\r\n        setData(newData);\r\n    }, []);\r\n\r\n    const getParkCode = (val) => {\r\n       return data.filter(f => f.name.includes(val))[0].code ?? \"\";\r\n    };\r\n\r\n    const validate = (e) => {\r\n        const { val } = e.target.dataset;        \r\n        fetch(`${API_URL}/findPark/${getParkCode(val)}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (Number(data.total) > 0) {\r\n                    console.log(data);\r\n                    const park = data.data.filter(f => f.fullName.includes(val))[0];\r\n                    console.log(park);\r\n                    if (park) {\r\n                        setFound(park.parkCode);\r\n                        setParkData(park);\r\n                        return;\r\n                    }\r\n                    alert(\"No parks were found! Please search again\");                    \r\n                } else {\r\n                    alert(\"No parks were found! Please search again\")\r\n                }\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {data &&\r\n                <CSSTransition\r\n                    classNames={\"example\"}\r\n                >\r\n                <div className={\"example\"}>\r\n                    <LandingPage>\r\n                        <Search>\r\n                            <AutoComplete\r\n                                options={data.map(m => m.name)}\r\n                                onSubmit={validate}\r\n                            />\r\n                        </Search>\r\n                    </LandingPage>\r\n                </div>\r\n                </CSSTransition>\r\n                             \r\n            }\r\n            {parkFound && <Redirect to={{\r\n                pathname: `/info/${parkFound}`,\r\n                state: {\r\n                    data: newParkData\r\n                }\r\n            }} />}\r\n        </>\r\n    );  \r\n}\r\n\r\nexport default React.memo(Home);","export default function randomNum(min, max){\r\n    return Math.round(Math.random() * (max - min) + min);\r\n}","import React from 'react';\r\n\r\nconst Highlight = ({ image, title }) => {    \r\n    const { profile_image, name, instagram_username, twitter_username } = image.user;\r\n    console.log(\"image\", image);\r\n\r\n    const referral = \"?utm_source=national-parks&utm_medium=referral\";\r\n    const userLink = `${image.user.links.html}${referral}`;\r\n    const unsplashLink = `https://unsplash.com/${referral}`;\r\n\r\n    return (\r\n        <>\r\n            <div className={\"activity__details\"}>\r\n                <h3 className={\"activity__details__title\"}>\r\n                    {title.name}\r\n                </h3>                \r\n                <div className={\"activity__details__user activity__user image-details\"}>                                    \r\n                    <div className={\"image-details__user\"}>\r\n                        <small className={\"image-details__photoBy\"}>Photo by:</small>\r\n                        <img className={\"image-details__user__headshot\"} src={profile_image.medium} alt={name} />\r\n                        <div className={\"image-details__user__name\"}>\r\n                            <a className={\"image-details__user__link\"} href={userLink} target={\"_blank\"}>\r\n                                {name}\r\n                            </a>\r\n                        </div>\r\n                        <a className={\"image-details__user__link\"} href={unsplashLink} target={\"_blank\"}>\r\n                            on Unsplash\r\n                        </a>\r\n                        {twitter_username && \r\n                            <a className={\"image-details__user__social\"} href={`https://twitter.com/${twitter_username}`}>\r\n                                {`${twitter_username}`}\r\n                            </a>\r\n                        }\r\n                        {instagram_username &&\r\n                            <a className={\"image-details__user__social\"} href={`https://www.instagram.com/${instagram_username}`} target={\"_blank\"} rel=\"noopener noreferrer\">\r\n                                {`@${instagram_username}`}</a>\r\n                        }\r\n                        <a className={\"image-details__user__social\"} href={image.links.html}>\r\n                            View Full Size Image\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <img className={\"activity__image\"} src={image.urls.regular} alt={image.alt_description} />\r\n            </div>            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default React.memo(Highlight);","import React from 'react';\r\n\r\nconst Toggle = ({ open, onClick }) => {\r\n    return (\r\n        <div className={`activity__toggle toggle ${open && \"toggle_open\"}`} onClick={onClick}>\r\n            <Bar />\r\n            <Bar />\r\n            <Bar />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst Bar = () => <div className={\"toggle__bar\"}>&nbsp;</div>;\r\n\r\nexport default Toggle;\r\n","import React, { useState } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Toggle from './Toggle';\r\n\r\nconst List = ({ activities, onClick }) => {\r\n    const [isOpen, setOpen] = useState(false);\r\n\r\n    const returnClick = (index) => {\r\n        setOpen(!isOpen);\r\n        onClick(index);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Toggle open={isOpen} onClick={() => setOpen(!isOpen)} />                                \r\n            <CSSTransition\r\n                in={isOpen}\r\n                timeout={150}\r\n                key={\"activity__list\"}\r\n                classNames={\"activity__list\"}\r\n            >\r\n                <ul className={\"activity__list\"}>\r\n                    {activities.map((m, i) => {\r\n                        return <li className={\"activity__list__item\"} onClick={() => returnClick(i)}>{m.name}</li>\r\n                    })}\r\n                </ul>\r\n            </CSSTransition>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default React.memo(List);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { API_URL } from '../../../services/url';\r\nimport randomNum from '../../../util';\r\nimport Highlight from './Highlight';\r\nimport List from './List';\r\n\r\nconst Activities = ({ list, title = \"Activities\" }) => { \r\n    const [activeIndex, setIndex] = useState(randomNum(0, list.length));\r\n    const [activeImage, setActiveImage] = useState(\"\");\r\n    const [images, setIndexImage] = useState([]);      \r\n    \r\n    useEffect(() => {\r\n        getNewImage(activeIndex);\r\n    }, [activeIndex]);\r\n\r\n    const getNewImage = (index) => {\r\n        if (images[index]) {            \r\n            //use an image already fetched\r\n            setActiveImage(images[index]);\r\n        } else {\r\n            //grab an image from the API\r\n            console.log(index);\r\n            const { name } = list[index];\r\n            fetch(`${API_URL}/images?page=1&query=${name}`)\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    const { results } = res.images;\r\n                    const image = results[randomNum(0, results.length)]\r\n                    const newArray = images;\r\n                    newArray[index] = image;\r\n                    setActiveImage(image);\r\n                    setIndexImage(newArray);\r\n                    //set active image and the image at the index\r\n            });\r\n        }        \r\n    }\r\n\r\n    //updates the index when they click on a new activity\r\n    const updateIndex = (newIndex) => setIndex(newIndex);\r\n\r\n    return (\r\n        <>\r\n            <div className={\"container\"}>\r\n                <h2>\r\n                    {title}\r\n                </h2>                \r\n            </div>\r\n            <div className={\"activity\"}>\r\n                {activeImage && <Highlight\r\n                    image={activeImage}\r\n                    title={list[activeIndex]}                    \r\n                />}\r\n                <List activities={list} onClick={updateIndex} />\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(Activities);","import React from 'react';\r\n\r\nconst Location = ({ addresses, location}) => {    \r\n    const physicalAddress = addresses.filter(f => f.type.toLowerCase().includes(\"physical\"))[0];\r\n\r\n    const formatAddress = (address) => {\r\n      return `${address.line1} ${address.city}, ${address.stateCode}`;\r\n    }\r\n\r\n    return (\r\n        <div className={\"location container\"}>\r\n          <div className={\"location__address\"}>\r\n            <h2 className={\"location__address_phsyical\"}>\r\n              {formatAddress(physicalAddress)}\r\n            </h2>\r\n          </div>\r\n          <div className={\"location__coord\"}>\r\n            \r\n          </div>\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default Location;","import React, { useEffect, useState } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nconst Hero = (props) => {\r\n    const { isFull, center } = props;\r\n    return (\r\n        <section className={`section-hero ${isFull && \"section-hero_full\"} ${center && \"section-hero_center\"}`}>\r\n            {props.children}\r\n        </section>\r\n    )\r\n}\r\n\r\nconst HeroHOC = ({ component: Component, baseClass, ...other}) => {\r\n    //can put a transition in there using baseClass    \r\n    const [appearIn, setAppearIn] = useState(false);\r\n    useEffect(() => {\r\n        setAppearIn(true);\r\n    }, []);\r\n    \r\n    return (\r\n        <CSSTransition  \r\n            in={appearIn}          \r\n            timeout={150}\r\n            key={baseClass}\r\n            classNames={baseClass}                     \r\n        >\r\n            <Component baseClass={baseClass} {...other} />\r\n        </CSSTransition>\r\n    );\r\n};\r\n\r\nconst HeroTitle = ({baseClass, addClass = \"\", children}) => {\r\n    return (\r\n        <h1 className={`${baseClass} ${addClass}`}>\r\n            {children}\r\n        </h1>\r\n    )\r\n}\r\n\r\nconst HeroSubtitle = ({baseClass, addClass = \"\", children}) => {\r\n    return (\r\n        <p className={`${baseClass} ${addClass}`}>\r\n            {children}\r\n        </p>\r\n    )\r\n};\r\n\r\nconst HeroContainer = ({baseClass, addClass = \"\", children}) => {\r\n    return (\r\n        <div className={`${baseClass} ${addClass}`}>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst HeroDescription = ({baseClass, addClass = \"\", children}) => {\r\n    return (\r\n        <p className={`${baseClass} ${addClass}`}>\r\n            {children}\r\n        </p>\r\n    );\r\n}\r\n\r\nconst HeroOverlay = ({addClass, children}) => {\r\n    return (\r\n        <div className={\"section-hero_overlay\"} />\r\n    );\r\n}\r\n\r\nHero.Title = (props) => <HeroHOC component={HeroTitle} baseClass={\"hero-content_title\"} {...props} />;\r\nHero.Subtitle = (props) => <HeroHOC component={HeroSubtitle} baseClass={\"hero-content_subtitle\"} {...props} />;\r\nHero.Container = (props) => <HeroHOC component={HeroContainer} baseClass={\"section-hero_content hero-content\"} {...props} />;\r\nHero.Description = (props) => <HeroHOC component={HeroDescription} baseClass={\"hero-content_description\"} {...props} />;\r\nHero.Overlay = (props) => <HeroHOC component={HeroOverlay} baseClass={\"section-hero_overlay\"} {...props} />;\r\n\r\nexport default Hero;\r\n\r\n\r\nHero.defaultProps = {\r\n    isFull: false,\r\n    center: false,\r\n}","import React from 'react';\r\n\r\nexport default function HeroOptions({ data, onClick, refData }) {    \r\n    return (\r\n        <div className={\"row hero-content_options\"}>\r\n            {Object.values(refData).map(item => {                \r\n                return <div onClick={() => onClick(item.ref)} className={\"col-3\"}>\r\n                    <p>{item.text}</p>\r\n                </div>\r\n            })}            \r\n        </div>  \r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { ChevronDown, ChevronUp, Map, Rulers, Triangle } from 'react-bootstrap-icons';\r\n\r\nconst Title = ({children}) => {\r\n    return <h3 className={\"trail__title\"}>{children}</h3>;\r\n};\r\n\r\nconst Subtitle = ({children}) => {\r\n    return  <h4 className={\"trail__subtitle\"}>{children}</h4>;\r\n};\r\n\r\nconst Image = ({ data, children }) => {\r\n    //make custom hook to get mobile? to determine what image to use.\r\n    return <div className={\"trail__body\"}>\r\n        <img className={\"trail__image\"} src={data.imgMedium} alt={data.name} />\r\n        {children}\r\n    </div>\r\n};\r\n\r\nconst Rating = () => {\r\n    //may change this to stars?\r\n};\r\n\r\nconst Trail = (props) => {\r\n    return <div className={\"trail\"}>\r\n            {props.children}\r\n        </div>;\r\n};\r\n\r\nconst Info = ({ data, children }) => {\r\n    const [isOpen, setOpenStatus] = useState(false);\r\n\r\n    const toggleOpen = () => {\r\n        setOpenStatus(!isOpen);\r\n    }\r\n    \r\n    return <div className={`trail__info ${isOpen && \"trail__info--open\"}`}>        \r\n        <div className={\"trail__toggle\"} onClick={toggleOpen}>\r\n            {children}\r\n            <span className={\"trail__toggle__icon\"}>\r\n                {isOpen ? <ChevronDown /> : <ChevronUp />}\r\n            </span>\r\n        </div>\r\n        <div className={\"trail__details\"}>\r\n            <Detail \r\n                dataPoint={data.location}\r\n                icon={<Map title={\"Location\"} />}\r\n            />\r\n            <Detail\r\n                dataPoint={data.length}\r\n                icon={<Rulers title={\"Length\"} />}\r\n            />\r\n            <Detail \r\n                dataPoint={data.ascent}\r\n                icon={<Triangle title={\"Ascent\"} />}\r\n            />          \r\n        </div>\r\n    </div>\r\n}; \r\n\r\nconst Detail = ({ dataPoint, data, icon}) => {\r\n    return (\r\n        <div className={`trail__details_spec`}>\r\n            <h5>{dataPoint}</h5>\r\n            {icon}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Scroll = ({ direction = \"left\", onScroll}) => {   \r\n    const isLeft = direction === \"left\";     \r\n    const scrollClick = () => onScroll(isLeft ? 20 : -20);\r\n    return (\r\n        <div onClick={scrollClick} className={`trail__scroll trail__scroll_${direction}`}>\r\n            <span>\r\n                {isLeft ? \"<\" : \">\"}\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nTrail.Title = Title;\r\nTrail.Subtitle = Subtitle;\r\nTrail.Image = Image;\r\nTrail.Rating = Rating;\r\nTrail.Info = Info;\r\nTrail.Detail = Detail;\r\n\r\nexport const TrailContainer = ({ data }) => {    \r\n    //figure out scrolling here\r\n    const [offset, setOffset] = useState(0);\r\n\r\n    const onScroll = (val) => {\r\n        setOffset(prevState => {\r\n            return prevState + val;\r\n        });\r\n    }\r\n\r\n    return <>\r\n        <Scroll onScroll={onScroll} />\r\n        <Scroll direction={\"right\"} onScroll={onScroll} />\r\n        <div style={{left: `${offset}px`, right: `${Math.abs(offset)}px`}} className={\"trail__container\"}>\r\n            {data.map(item =>\r\n                <Trail>\r\n                    <Trail.Image data={item}>\r\n                        <Trail.Info data={item}>\r\n                            <Trail.Title>\r\n                                {item.name}\r\n                            </Trail.Title>\r\n                            <Trail.Subtitle>\r\n                                {`Rating: ${item.stars}`}\r\n                            </Trail.Subtitle>\r\n                        </Trail.Info>\r\n                    </Trail.Image>\r\n                </Trail>\r\n            )}\r\n        </div>       \r\n    </>    \r\n};","import React, { useEffect, useState } from 'react';\r\nimport { API_URL } from '../../services/url';\r\nimport { TrailContainer } from './Trail';\r\n\r\nconst Hiking = ({lat, long}) => {\r\n    const [data, setData] = useState(false);\r\n    console.log(lat);\r\n    console.log(long);\r\n    useEffect(() => {\r\n        fetch(`${API_URL}/get-trails?lat=${lat}&long=${long}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setData(data.trails);                                      \r\n        })\r\n    }, [lat, long]);\r\n    \r\n    return (\r\n        <>\r\n            {data && data.length > 0 && <TrailContainer data={data} />}                \r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(Hiking);","import React, { useEffect, useState } from 'react';\r\nimport { API_URL } from '../../../services/url';\r\n\r\nconst Articles = ({ parkID }) => {\r\n    const [articles, setArticle] = useState(false);    \r\n    const [page, setPage] = useState(0);    \r\n\r\n    useEffect(() => {                                  \r\n        fetch(`${API_URL}/articles/${parkID}`)\r\n            .then(res => res.json())\r\n            .then(articles => {               \r\n                const chunks = [];\r\n                while (articles.data.data.length > 0) {\r\n                    chunks.push(articles.data.data.splice(0, 5));\r\n                }\r\n                setArticle(chunks);                               \r\n            })\r\n    }, [parkID]);\r\n\r\n    const readMore = () => {        \r\n        setPage(prevState => {            \r\n            return page + 1;\r\n        });\r\n    };\r\n\r\n    const readLess = () => {\r\n        setPage(prevState => {\r\n            return page - 1;\r\n        });\r\n    }\r\n    \r\n    const getActiveArticles = () => {                \r\n        return [...articles.filter((f, i) => i <= page).flat()];\r\n    }   \r\n    \r\n\r\n    return (\r\n        <>\r\n            <div className={\"container\"}>\r\n                <h2 className={\"section__header\"}>\r\n                    Articles\r\n                </h2>\r\n            </div>\r\n        {articles && <div className={\"article__container\"}>\r\n            {getActiveArticles().map((m, i) => {\r\n                const isFeature = i % 3 === 0;\r\n                console.log(m);\r\n                return (\r\n                    <a className={\"article__link\"} href={m.url} target={\"_blank\"}>\r\n                        <div className={`article ${isFeature && \"article_feature\"}`}>\r\n                            <img className={\"article__image\"} src={m.listingImage.url} alt={m.listingImage.altText} />\r\n                            <div className={\"article__body\"}>\r\n                                <h3 className={\"article__title\"}>{m.title}</h3>\r\n                                <p className={\"article__desc\"}>\r\n                                    {m.listingDescription}\r\n                                </p>\r\n                            </div>                            \r\n                        </div>\r\n                    </a>\r\n                );\r\n            })}\r\n            <div className={\"article__buttons\"}>\r\n                {page > 0 && <button type={\"button\"} className={\"article__button article__button_less\"} onClick={readLess}>Read Less</button>}\r\n                <button type={\"button\"} className={\"article__button article__button_more\"} onClick={readMore}>\r\n                        Read More\r\n                </button>\r\n            </div>            \r\n        </div>\r\n        }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default React.memo(Articles);\r\n","import React from 'react';\r\nimport { useScrollCheck } from '../hooks/useScrollCheck';\r\n\r\nconst Section = React.forwardRef((props, ref) => { \r\n    const isVisible = useScrollCheck(ref);\r\n    return (\r\n        <section ref={ref} className={`section ${props.name}__section`}>\r\n            {isVisible ? props.children : \"Waiting...\"}\r\n        </section>\r\n    );\r\n});\r\n\r\nexport default React.memo(Section);\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport function useScrollCheck(ref) {\r\n    const [inView, setInView] = useState(false);\r\n\r\n    useEffect(() => {\r\n        console.log(ref.current);\r\n        if (ref.current) {\r\n            const observer = new IntersectionObserver((entries, observer) => {                \r\n                entries.forEach((item) => {                    \r\n                    if (item.isIntersecting) {\r\n                        setInView(true);\r\n                        observer.unobserve(ref.current);\r\n                    }                    \r\n                })\r\n            });\r\n            observer.observe(ref.current);            \r\n        }\r\n    }, [ref]);\r\n    return inView;\r\n};","import React, { useEffect, useRef, useState } from 'react';\r\nimport Activities from './Components/Parks/Activities/Activities';\r\nimport Location from './Components/Parks/Location';\r\nimport Hero from './Components/Hero/Hero';\r\nimport HeroOptions from './Components/Hero/HeroOptions';\r\nimport Hiking from './Components/Parks/Hiking';\r\nimport BackgroundImage from './Components/BackgroundImage';\r\nimport { API_URL } from './services/url';\r\nimport Articles from './Components/Parks/Articles/Articles';\r\nimport Section from './Components/Section';\r\n\r\nconst ParkPage = ({ location, match }) => {\r\n    const [data, setData] = useState({});\r\n    const newsRef = useRef();\r\n    const activitiesRef = useRef();\r\n    const hikingRef = useRef();\r\n    const locationRef = useRef();\r\n    \r\n    const refs = {\r\n        NEWS: { text: \"News\", ref: newsRef},\r\n        ACTIVITES: {text: \"Activities\", ref: activitiesRef},\r\n        TRAIL: {text: \"Hiking\", ref: hikingRef},\r\n        LOCATION: {text: \"Location & Hours\", ref: locationRef}\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(location);\r\n        if (location.state?.data) {\r\n            setData(data);\r\n        } else {\r\n            initData();\r\n        }\r\n    }, []);\r\n\r\n    //get initial data about the park\r\n    function initData() {\r\n        const { parkID } = match.params;\r\n        fetch(`${API_URL}/info/${parkID}`)\r\n            .then(res => res.json())\r\n            .then(data => {           \r\n                console.log(data);     \r\n                setData(data.data[0]);                \r\n            })\r\n    }\r\n\r\n    //select background image for hero from images provided by NPS\r\n    const selectHeroBackground = (imgs) => {        \r\n        return imgs[randomNum(0, imgs.length - 1)].url;\r\n    }\r\n\r\n    const randomNum = (min, max) => {\r\n        return Math.round(Math.random() * (max - min) + min);\r\n    }\r\n\r\n    //scrolls to the div for the information\r\n    const scrollToDiv = (ref) => {        \r\n        ref.current && ref.current.scrollIntoView({\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            {Object.keys(data).length > 0 ?\r\n                <>                        \r\n                        <Hero\r\n                            isFull\r\n                        >\r\n                        <BackgroundImage src={selectHeroBackground(data.images)}>   \r\n                            <Hero.Container>\r\n                                <Hero.Title>\r\n                                    {data.name}\r\n                                </Hero.Title>\r\n                                <Hero.Subtitle>\r\n                                    {data.designation}\r\n                                </Hero.Subtitle>\r\n                                <Hero.Description>\r\n                                    {data.description}\r\n                                </Hero.Description>                                   \r\n                                <HeroOptions onClick={scrollToDiv} refData={refs} data={data} />\r\n                            </Hero.Container>                      \r\n                        </BackgroundImage>                                \r\n                        </Hero>\r\n                        <Section ref={locationRef} name={\"location\"}>\r\n                            {data.addresses && <Location addresses={data.addresses} location={{lat: data.latitude, long: data.longitude}} />}                        \r\n                        </Section>               \r\n                        <Section ref={hikingRef} name={\"hiking\"}>\r\n                            <Hiking lat={data.latitude} long={data.longitude} />\r\n                        </Section>\r\n                        <Section ref={activitiesRef} name={\"activites\"}>\r\n                            {data.activities.length > 0 && <Activities list={data.activities} />}\r\n                        </Section>\r\n                        <Section ref={newsRef} name={\"news\"}>\r\n                            <Articles parkID={match.params.parkID} />\r\n                        </Section>\r\n                        {data.topics.length > 0 && <Activities list={data.topics} title={\"Topics\"} />}                                                                      \r\n                </>\r\n                : \"No data son!\"}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ParkPage;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function NavBar () {\r\n    return (\r\n        <div className={\"nav\"}>\r\n            <Link to={\"/\"} className={\"nav__link\"}>\r\n                Home\r\n            </Link>\r\n        </div>       \r\n    );\r\n}","import React from 'react';\r\n\r\nconst List = ({ children }) => {\r\n    return <ul className={\"footer__list\"}>{children}</ul>\r\n};\r\n\r\nconst ListItem = ({ children, isTitle}) => {\r\n    return <li className={`footer__list__item ${isTitle && \"footer__list__item_title\"}`}>\r\n        {children}\r\n    </li>\r\n}\r\n\r\nconst Link = ({ link, text }) => {\r\n    return <a className={\"footer__link\"} href={link} target={\"_blank\"}>{text}</a>;\r\n}\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className={\"footer__section\"}>\r\n            <div className={\"footer__container\"}>\r\n                <List>\r\n                    <ListItem isTitle>\r\n                        Tools Used\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <Link link={\"https://www.nps.gov/subjects/developer/api-documentation.htm#/\"} text={\"National Parks API\"} />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <Link link={\"https://unsplash.com/documentation\"} text={\"Unsplash API\"} />\r\n                    </ListItem>\r\n                </List>\r\n                <List>\r\n                    <ListItem isTitle>\r\n                        How to contact me\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <Link link={\"https://github.com/mbsAndrew/national-parks\"} text={\"Github\"} />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <Link link={\"mailto:andrew89hansen@gmail.com\"} text={\"Email\"} />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <Link link={\"https://www.linkedin.com/in/andrew-hansen-91a42867/\"} text={\"LinkedIn\"} />\r\n                    </ListItem>\r\n                </List>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nFooter.List = List; \r\nFooter.ListItem = ListItem;\r\nFooter.Link = Link;\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router';\r\nimport Home from './Home';\r\nimport ParkPage from './ParkPage';\r\nimport NavBar from './Components/NavBar';\r\nimport Footer from './Components/Footer';\r\n\r\nexport default function Routes() {\r\n    return (\r\n        <>\r\n            <header>\r\n                <NavBar />\r\n            </header>            \r\n            <article>\r\n                <Switch>                    \r\n                    <Route exact path=\"/\" component={Home} />\r\n                    <Route exact path=\"/national-parks\" component={Home} />\r\n                    <Route path=\"/info/:parkID\" component={ParkPage} />                   \r\n                </Switch>\r\n            </article>            \r\n            <Footer />\r\n        </>\r\n    )\r\n}","import { createBrowserHistory } from 'history';\r\nconst history = createBrowserHistory();\r\nexport default history;","import React from 'react';\r\nimport { Router } from 'react-router';\r\nimport Routes from './Routes';\r\nimport history from './services/history';\r\n\r\nclass Main extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Router history={history}>\r\n                    <Routes />\r\n                </Router>               \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Main from './Main';\r\nimport './app.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Main />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}