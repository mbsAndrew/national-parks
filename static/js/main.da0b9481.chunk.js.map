{"version":3,"sources":["serviceWorker.js","Components/AutoComplete.js","Components/Search.js","Components/BackgroundImage.js","Components/LandingPage.js","services/url.js","Home.js","util/index.js","Components/Parks/Activities/Highlight.js","Components/Parks/Activities/List.js","Components/Parks/Activities/Activities.js","Components/Parks/Location.js","Components/Hero/Hero.js","Components/Hero/HeroOptions.js","Components/Parks/Trail.js","Components/Parks/Hiking.js","Components/Parks/Articles/Articles.js","ParkPage.js","Components/NavBar.js","Routes.js","services/history.js","Main.js","index.js"],"names":["Boolean","window","location","hostname","match","AutoComplete","onChange","e","options","props","userInput","currentTarget","value","filteredOptions","filter","f","toLowerCase","indexOf","i","setState","actionOption","showOptions","onKeyDown","state","keyCode","showSuggestions","length","getOptionList","optionList","activeOption","className","map","optionName","index","data-val","key","onClick","onSubmit","filtered","this","type","React","Component","memo","children","src","style","background","backgroundSize","backgroundPosition","API_URL","useState","data","setData","parkFound","setFound","newParkData","setParkData","useEffect","newData","parkData","m","name","code","CSSTransition","classNames","val","target","dataset","fetch","includes","getParkCode","then","res","json","Number","total","console","log","park","fullName","parkCode","alert","to","pathname","randomNum","min","max","Math","round","random","image","title","user","profile_image","instagram_username","twitter_username","medium","alt","href","rel","urls","regular","alt_description","activities","isOpen","setOpen","returnClick","in","timeout","list","activeIndex","setIndex","activeImage","setActiveImage","images","setIndexImage","getNewImage","results","newArray","newIndex","Location","params","Hero","isFull","center","HeroHOC","component","baseClass","other","appearIn","setAppearIn","HeroTitle","addClass","HeroSubtitle","HeroContainer","HeroDescription","HeroOverlay","Title","Subtitle","Container","Description","Overlay","HeroOptions","defaultProps","Trail","Detail","dataPoint","icon","Image","imgMedium","Rating","Info","setOpenStatus","ascent","TrailContainer","item","stars","lat","long","trails","parkID","articles","setArticle","page","setPage","chunks","push","splice","flat","isFeature","url","listingImage","altText","listingDescription","prevState","ParkPage","initData","selectHeroBackground","imgs","Object","keys","designation","description","addresses","latitude","longitude","topics","NavBar","Routes","exact","path","Home","history","createBrowserHistory","Main","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.da0b9481.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nclass AutoComplete extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            actionOption: 0,\r\n            filtered: [],\r\n            showOptions: false,\r\n            userInput: \"\"\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        const { options } = this.props;\r\n        const userInput = e.currentTarget.value;\r\n        const filteredOptions = options.filter(f => {\r\n            return f.toLowerCase().indexOf(userInput.toLowerCase()) > -1\r\n        }).filter((f, i) => i < 4);\r\n\r\n        this.setState({\r\n            actionOption: 0,\r\n            filteredOptions,\r\n            showOptions: true,\r\n            userInput\r\n        });\r\n    }\r\n\r\n    onKeyDown = (e) => {\r\n        const { actionOption, filteredOptions } = this.state;\r\n        if (e.keyCode === 13) {\r\n            this.setState({\r\n                actionOption: 0,\r\n                showSuggestions: false,\r\n                userInput: filteredOptions[actionOption]\r\n            });\r\n        } else if (e.keyCode === 38) {\r\n            if (actionOption === 0) {\r\n                return false\r\n            };\r\n\r\n            this.setState({\r\n                actionOption: actionOption - 1\r\n            })\r\n        } else if (e.keyCode === 40) {\r\n            if (actionOption - 1 === filteredOptions.length) {\r\n                return;\r\n            }\r\n            this.setState({\r\n                actionOption: actionOption + 1\r\n            })\r\n        }\r\n    }\r\n\r\n    getOptionList = () => {\r\n        const { showOptions, userInput, filteredOptions, activeOption } = this.state;\r\n        let optionList;\r\n        if (showOptions && userInput) {\r\n            if (filteredOptions.length) {\r\n                optionList = (\r\n                    <ul className=\"searchBar_options\">\r\n                        {filteredOptions.map((optionName, index) => {\r\n                            let className;\r\n                            if (index === activeOption) {\r\n                                className = 'option-active';\r\n                            }\r\n                            return (\r\n                                <li data-val={optionName} className={className} key={optionName} onClick={this.props.onSubmit}>\r\n                                    {optionName}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                );\r\n            } else {\r\n                optionList = (\r\n                    <div className=\"no-options\">\r\n                        <em>No Option!</em>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n\r\n        }\r\n        return optionList;\r\n    }\r\n\r\n    render() {\r\n        const { userInput } = this.state;\r\n        const optionList = this.getOptionList();\r\n\r\n        return (\r\n            <div className={\"searchBar\"}>                  \r\n                <input\r\n                    type={\"text\"}\r\n                    className={\"searchBar_box\"}\r\n                    onChange={this.onChange}\r\n                    onKeyDown={this.onKeyDown}\r\n                    value={userInput}\r\n                />\r\n                <button type={\"button\"} data-val={userInput} className={\"searchBar_btn\"} onClick={this.props.onSubmit}>\r\n                    Search\r\n                </button>                \r\n                {optionList}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AutoComplete;","import React from 'react';\r\n\r\nconst Search = ({children}) => {\r\n    return (\r\n        <div className={\"search\"}>\r\n            <div className={\"search-card\"}>\r\n                <h2 className={\"search-card_title\"}>\r\n                    Find Your Park\r\n                </h2>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Search);","import React from 'react';\r\n\r\nconst BackgroundImage = ({ src, children }) => {\r\n    return (\r\n        <>\r\n            <div className={\"background-image\"}\r\n                style={{\r\n                    background: `linear-gradient(0deg, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.6)), url(${src})`,\r\n                    backgroundSize: \"cover\",\r\n                    backgroundPosition: \"center center\"\r\n                }}\r\n            />\r\n            {children}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default React.memo(BackgroundImage);\r\n","import React from 'react';\r\nimport BackgroundImage from './BackgroundImage';\r\n\r\nconst LandingPage = ({children}) => {\r\n    return (\r\n        <section className={\"page\"}>\r\n            <BackgroundImage src={\"https://news.harvard.edu/wp-content/uploads/2019/09/leo-serrat_unsplash-1.jpg?w=1600&h=900&crop=1\"}>\r\n                <div className={\"page-content\"}>\r\n                    {children}\r\n                </div>\r\n            </BackgroundImage>                      \r\n        </section>\r\n    );\r\n};\r\n\r\nexport default React.memo(LandingPage);\r\n","export const API_URL = process.env.NODE_ENV ===  \"development\"\r\n? \"http://localhost:1234\" \r\n: \"https://national-parks-api.herokuapp.com\";","import React, { useEffect, useState } from 'react';\r\nimport parkData from './data/parkData.json';\r\nimport AutoComplete from './Components/AutoComplete';\r\nimport { Redirect } from 'react-router';\r\nimport Search from './Components/Search';\r\nimport LandingPage from './Components/LandingPage';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { API_URL } from './services/url';\r\n\r\nconst Home = () => {\r\n    const [data, setData] = useState(false);\r\n    const [parkFound, setFound] = useState(false);\r\n    const [newParkData, setParkData] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const newData = parkData.map(m => {\r\n            return {\r\n                name: m[\"Location Name\"],\r\n                code: m[\"Location Number\"]\r\n            }\r\n        });\r\n        setData(newData);\r\n    }, []);\r\n\r\n    const getParkCode = (val) => {\r\n       return data.filter(f => f.name.includes(val))[0].code ?? \"\";\r\n    };\r\n\r\n    const validate = (e) => {\r\n        const { val } = e.target.dataset;        \r\n        fetch(`${API_URL}/findPark/${getParkCode(val)}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (Number(data.total) > 0) {\r\n                    console.log(data);\r\n                    const park = data.data.filter(f => f.fullName.includes(val))[0];\r\n                    console.log(park);\r\n                    if (park) {\r\n                        setFound(park.parkCode);\r\n                        setParkData(park);\r\n                        return;\r\n                    }\r\n                    alert(\"No parks were found! Please search again\");                    \r\n                } else {\r\n                    alert(\"No parks were found! Please search again\")\r\n                }\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {data &&\r\n                <CSSTransition\r\n                    classNames={\"example\"}\r\n                >\r\n                <div className={\"example\"}>\r\n                    <LandingPage>\r\n                        <Search>\r\n                            <AutoComplete\r\n                                options={data.map(m => m.name)}\r\n                                onSubmit={validate}\r\n                            />\r\n                        </Search>\r\n                    </LandingPage>\r\n                </div>\r\n                </CSSTransition>\r\n                             \r\n            }\r\n            {parkFound && <Redirect to={{\r\n                pathname: `/info/${parkFound}`,\r\n                state: {\r\n                    data: newParkData\r\n                }\r\n            }} />}\r\n        </>\r\n    );  \r\n}\r\n\r\nexport default React.memo(Home);","export default function randomNum(min, max){\r\n    return Math.round(Math.random() * (max - min) + min);\r\n}","import React from 'react';\r\n\r\nconst Highlight = ({ image, title }) => {    \r\n    const { profile_image, name, instagram_username, twitter_username } = image.user\r\n    return (\r\n        <>\r\n            <div className={\"activity__details\"}>\r\n                <h3 className={\"activity__details__title\"}>\r\n                    {title.name}\r\n                </h3>\r\n                <div className={\"activity__details__user activity__user image-details\"}>                                    \r\n                    <div className={\"image-details__user\"}>\r\n                        <img className={\"image-details__user__headshot\"} src={profile_image.medium} alt={name} />\r\n                        <div className={\"image-details__user__name\"}>\r\n                            {name}\r\n                        </div>\r\n                        {twitter_username && <div className={\"image-details__user__social\"}>\r\n                            <a href={`https://twitter.com/${twitter_username}`}>\r\n                                {`${twitter_username}`}\r\n                            </a>\r\n                        </div>}\r\n                        {instagram_username && <div className={\"image-details__user__social\"}>\r\n                            <a href={`https://www.instagram.com/${instagram_username}`} target={\"_blank\"} rel=\"noopener noreferrer\">\r\n                                {`@${instagram_username}`}</a>\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n                <img className={\"activity__image\"} src={image.urls.regular} alt={image.alt_description} />\r\n            </div>            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default React.memo(Highlight);","import React, { useState } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nconst List = ({ activities, onClick }) => {\r\n    const [isOpen, setOpen] = useState(false);\r\n\r\n    const returnClick = (index) => {\r\n        setOpen(!isOpen);\r\n        onClick(index);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <button type={\"button\"} className={\"activity__toggle\"} onClick={() => setOpen(!isOpen)}>\r\n            X\r\n        </button>                           \r\n            <CSSTransition\r\n                in={isOpen}\r\n                timeout={150}\r\n                key={\"activity__list\"}\r\n                classNames={\"activity__list\"}\r\n            >\r\n                <ul className={\"activity__list\"}>\r\n                    {activities.map((m, i) => {\r\n                        return <li className={\"activity__list__item\"} onClick={() => returnClick(i)}>{m.name}</li>\r\n                    })}\r\n                </ul>\r\n            </CSSTransition>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default React.memo(List);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { API_URL } from '../../../services/url';\r\nimport randomNum from '../../../util';\r\nimport Highlight from './Highlight';\r\nimport List from './List';\r\n\r\nconst Activities = ({ list, title = \"Activities\" }) => { \r\n    const [activeIndex, setIndex] = useState(randomNum(0, list.length));\r\n    const [activeImage, setActiveImage] = useState(\"\");\r\n    const [images, setIndexImage] = useState([]);      \r\n    \r\n    useEffect(() => {\r\n        getNewImage(activeIndex);\r\n    }, [activeIndex]);\r\n\r\n    const getNewImage = (index) => {\r\n        if (images[index]) {            \r\n            //use an image already fetched\r\n            setActiveImage(images[index]);\r\n        } else {\r\n            //grab an image from the API\r\n            const { name } = list[index];\r\n            fetch(`${API_URL}/images?page=1&query=${name}`)\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    const { results } = res.images;\r\n                    const image = results[randomNum(0, results.length)]\r\n                    const newArray = images;\r\n                    newArray[index] = image;\r\n                    setActiveImage(image);\r\n                    setIndexImage(newArray);\r\n                    //set active image and the image at the index\r\n            });\r\n        }        \r\n    }\r\n\r\n    //updates the index when they click on a new activity\r\n    const updateIndex = (newIndex) => setIndex(newIndex);\r\n\r\n    return (\r\n        <section>\r\n            <div className={\"container\"}>\r\n                <h2>\r\n                    {title}\r\n                </h2>                \r\n            </div>\r\n            <div className={\"activity\"}>\r\n                {activeImage && <Highlight\r\n                    image={activeImage}\r\n                    title={list[activeIndex]}                    \r\n                />}\r\n                <List activities={list} onClick={updateIndex} />\r\n            </div>\r\n            \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default React.memo(Activities);","import React from 'react';\r\n\r\nexport default function Location (params) {\r\n    return (\r\n        <section className={\"section section_fill-white\"}>\r\n          Location Component?\r\n        </section>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nconst Hero = (props) => {\r\n    const { isFull, center } = props;\r\n    return (\r\n        <section className={`section-hero ${isFull && \"section-hero_full\"} ${center && \"section-hero_center\"}`}>\r\n            {props.children}\r\n        </section>\r\n    )\r\n}\r\n\r\nconst HeroHOC = ({ component: Component, baseClass, ...other}) => {\r\n    //can put a transition in there using baseClass    \r\n    const [appearIn, setAppearIn] = useState(false);\r\n    useEffect(() => {\r\n        setAppearIn(true);\r\n    }, []);\r\n    \r\n    return (\r\n        <CSSTransition  \r\n            in={appearIn}          \r\n            timeout={150}\r\n            key={baseClass}\r\n            classNames={baseClass}                     \r\n        >\r\n            <Component baseClass={baseClass} {...other} />\r\n        </CSSTransition>\r\n    );\r\n};\r\n\r\nconst HeroTitle = ({baseClass, addClass = \"\", children}) => {\r\n    return (\r\n        <h1 className={`${baseClass} ${addClass}`}>\r\n            {children}\r\n        </h1>\r\n    )\r\n}\r\n\r\nconst HeroSubtitle = ({baseClass, addClass = \"\", children}) => {\r\n    return (\r\n        <h2 className={`${baseClass} ${addClass}`}>\r\n            {children}\r\n        </h2>\r\n    )\r\n};\r\n\r\nconst HeroContainer = ({baseClass, addClass = \"\", children}) => {\r\n    return (\r\n        <div className={`${baseClass} ${addClass}`}>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst HeroDescription = ({baseClass, addClass = \"\", children}) => {\r\n    return (\r\n        <p className={`${baseClass} ${addClass}`}>\r\n            {children}\r\n        </p>\r\n    );\r\n}\r\n\r\nconst HeroOverlay = ({addClass, children}) => {\r\n    return (\r\n        <div className={\"section-hero_overlay\"} />\r\n    );\r\n}\r\n\r\nHero.Title = (props) => <HeroHOC component={HeroTitle} baseClass={\"hero-content_title\"} {...props} />;\r\nHero.Subtitle = (props) => <HeroHOC component={HeroSubtitle} baseClass={\"hero-content_subtitle\"} {...props} />;\r\nHero.Container = (props) => <HeroHOC component={HeroContainer} baseClass={\"section-hero_content hero-content\"} {...props} />;\r\nHero.Description = (props) => <HeroHOC component={HeroDescription} baseClass={\"hero-content_description\"} {...props} />;\r\nHero.Overlay = (props) => <HeroHOC component={HeroOverlay} baseClass={\"section-hero_overlay\"} {...props} />;\r\n\r\nexport default Hero;\r\n\r\n\r\nHero.defaultProps = {\r\n    isFull: false,\r\n    center: false,\r\n}","import React from 'react';\r\n\r\nexport default function HeroOptions({ data }) {\r\n    return (\r\n        <div className={\"row hero-content_options\"}>\r\n            <div className={\"col-3\"}>\r\n                <p>News</p>\r\n            </div>\r\n            <div className={\"col-3\"}>\r\n                <p>Activities</p>\r\n            </div>\r\n            <div className={\"col-3\"}>\r\n                <p>Hiking</p>\r\n            </div>\r\n            <div className={\"col-3\"}>\r\n                <p>Location & Hours</p>\r\n            </div>\r\n        </div>  \r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ChevronDown, ChevronUp, Map, Rulers, Triangle } from 'react-bootstrap-icons';\r\n\r\nconst Title = ({children}) => {\r\n    return <h3 className={\"trail__title\"}>{children}</h3>;\r\n};\r\n\r\nconst Subtitle = ({children}) => {\r\n    return  <h4 className={\"trail__subtitle\"}>{children}</h4>;\r\n};\r\n\r\nconst Image = ({ data, children }) => {\r\n    //make custom hook to get mobile? to determine what image to use.\r\n    return <div className={\"trail__body\"}>\r\n        <img className={\"trail__image\"} src={data.imgMedium} alt={data.name} />\r\n        {children}\r\n    </div>\r\n};\r\n\r\nconst Rating = () => {\r\n    //may change this to stars?\r\n};\r\n\r\nconst Trail = (props) => {\r\n    return <div className={\"trail\"}>\r\n            {props.children}\r\n        </div>;\r\n};\r\n\r\nconst Info = ({ data, children }) => {\r\n    const [isOpen, setOpenStatus] = useState(false);\r\n\r\n    const toggleOpen = () => {\r\n        setOpenStatus(!isOpen);\r\n    }\r\n    console.log(data);\r\n    return <div className={`trail__info ${isOpen && \"trail__info--open\"}`}>        \r\n        <div className={\"trail__toggle\"} onClick={toggleOpen}>\r\n            {children}\r\n            <span className={\"trail__toggle__icon\"}>\r\n                {isOpen ? <ChevronDown /> : <ChevronUp />}\r\n            </span>\r\n        </div>\r\n        <div className={\"trail__details\"}>\r\n            <Detail \r\n                dataPoint={data.location}\r\n                icon={<Map title={\"Location\"} />}\r\n            />\r\n            <Detail\r\n                dataPoint={data.length}\r\n                icon={<Rulers title={\"Length\"} />}\r\n            />\r\n            <Detail \r\n                dataPoint={data.ascent}\r\n                icon={<Triangle title={\"Ascent\"} />}\r\n            />          \r\n        </div>\r\n    </div>\r\n}; \r\n\r\nconst Detail = ({ dataPoint, data, icon}) => {\r\n    return (\r\n        <div className={`trail__details_spec`}>\r\n            <h5>{dataPoint}</h5>\r\n            {icon}\r\n        </div>\r\n    );\r\n}\r\n\r\nTrail.Title = Title;\r\nTrail.Subtitle = Subtitle;\r\nTrail.Image = Image;\r\nTrail.Rating = Rating;\r\nTrail.Info = Info;\r\nTrail.Detail = Detail;\r\n\r\nexport const TrailContainer = ({ data }) => {    \r\n    //figure out scrolling here\r\n\r\n    return <section className={\"section section_fill-white\"}>\r\n        <div className={\"container_trail\"}>\r\n            {data.map(item =>\r\n                <Trail>\r\n                    <Trail.Image data={item}>\r\n                        <Trail.Info data={item}>\r\n                            <Trail.Title>\r\n                                {item.name}\r\n                            </Trail.Title>\r\n                            <Trail.Subtitle>\r\n                                {`Rating: ${item.stars}`}\r\n                            </Trail.Subtitle>\r\n                        </Trail.Info>\r\n                    </Trail.Image>\r\n                </Trail>\r\n            )}\r\n        </div>\r\n    </section>\r\n    //use this to render instead of having everything\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { API_URL } from '../../services/url';\r\nimport { TrailContainer } from './Trail';\r\n\r\nconst Hiking = ({lat, long}) => {\r\n    const [data, setData] = useState(false);\r\n    console.log(lat);\r\n    console.log(long);\r\n    useEffect(() => {\r\n        fetch(`${API_URL}/get-trails?lat=${lat}&long=${long}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setData(data.trails);            \r\n            console.log(data);               \r\n        })\r\n    }, [lat, long]);\r\n    \r\n    return (\r\n        <>\r\n            {data && data.length > 0 && <TrailContainer data={data} />}                \r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(Hiking);","import React, { useEffect, useState } from 'react';\r\nimport { API_URL } from '../../../services/url';\r\n\r\nconst Articles = ({ parkID }) => {\r\n    const [articles, setArticle] = useState(false);\r\n    const [active, setActive] = useState([]);\r\n    const [page, setPage] = useState(0);    \r\n\r\n    useEffect(() => {                                  \r\n        fetch(`${API_URL}/articles/${parkID}`)\r\n            .then(res => res.json())\r\n            .then(articles => {               \r\n                const chunks = [];\r\n                while (articles.data.data.length > 0) {\r\n                    chunks.push(articles.data.data.splice(0, 5));\r\n                }\r\n                setArticle(chunks);                               \r\n            })\r\n    }, [parkID]);\r\n\r\n    const readMore = () => {        \r\n        setPage(prevState => {            \r\n            return page + 1;\r\n        });\r\n    };\r\n\r\n    const readLess = () => {\r\n        setPage(prevState => {\r\n            return page - 1;\r\n        });\r\n    }\r\n    \r\n    const getActiveArticles = () => {        \r\n        console.log([...articles.filter((f, i) => i <= page).flat()]);\r\n        return [...articles.filter((f, i) => i <= page).flat()];\r\n    }   \r\n    \r\n\r\n    return (\r\n        <section>\r\n            <div className={\"container\"}>\r\n                <h2 className={\"section__header\"}>\r\n                    Articles\r\n                </h2>\r\n            </div>\r\n        {articles && <div className={\"article__container\"}>\r\n            {getActiveArticles().map((m, i) => {\r\n                const isFeature = i % 3 === 0;\r\n                return (\r\n                    <a href={m.url} target={\"_blank\"}>\r\n                        <div className={`article ${isFeature && \"article_feature\"}`}>\r\n                            <img className={\"article__image\"} src={m.listingImage.url} alt={m.listingImage.altText} />\r\n                            <div className={\"article__body\"}>\r\n                                <h3 className={\"article__title\"}>{m.title}</h3>\r\n                                <p className={\"article__desc\"}>\r\n                                    {m.listingDescription}\r\n                                </p>\r\n                            </div>                            \r\n                        </div>\r\n                    </a>\r\n                );\r\n            })}\r\n            <div className={\"article__buttons\"}>\r\n                {page > 0 && <button type={\"button\"} className={\"article__button\"} onClick={readLess}>Read Less</button>}\r\n                <button type={\"button\"} className={\"article__button\"} onClick={readMore}>\r\n                        Read More\r\n                </button>\r\n            </div>            \r\n        </div>\r\n        }\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default React.memo(Articles);\r\n","import React from 'react';\r\nimport Activities from './Components/Parks/Activities/Activities';\r\nimport Location from './Components/Parks/Location';\r\nimport Hero from './Components/Hero/Hero';\r\nimport HeroOptions from './Components/Hero/HeroOptions';\r\nimport Hiking from './Components/Parks/Hiking';\r\nimport BackgroundImage from './Components/BackgroundImage';\r\nimport { API_URL } from './services/url';\r\nimport Articles from './Components/Parks/Articles/Articles';\r\n\r\nclass ParkPage extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            data: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {        \r\n        const { data } = this.props.location.state || false;\r\n        if (data) {            \r\n            this.setState({\r\n                data: data\r\n            })\r\n        } else {\r\n            this.initData();\r\n        }        \r\n    }\r\n\r\n    initData = () => {\r\n        const { parkID } = this.props.match.params;                \r\n        fetch(`${API_URL}/info/${parkID}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(\"infoData\", data);\r\n                this.setState({\r\n                    data: data.data[0]\r\n                });\r\n            })\r\n    }\r\n\r\n    randomNum = (min, max) => {\r\n        return Math.round(Math.random() * (max - min) + min);\r\n    }\r\n\r\n    selectHeroBackground = (imgs) => {        \r\n        return imgs[this.randomNum(0, imgs.length - 1)].url;\r\n    }\r\n\r\n    render() {\r\n        const { data } = this.state;        \r\n        const { parkID } = this.props.match.params;          \r\n        return (\r\n            <>\r\n                {Object.keys(data).length > 0 ?\r\n                    <>                        \r\n                            <Hero\r\n                                isFull\r\n                            >\r\n                            <BackgroundImage src={this.selectHeroBackground(data.images)}>   \r\n                                <Hero.Container>\r\n                                    <Hero.Title>\r\n                                        {data.name}\r\n                                    </Hero.Title>\r\n                                    <Hero.Subtitle>\r\n                                        {data.designation}\r\n                                    </Hero.Subtitle>\r\n                                    <Hero.Description>\r\n                                        {data.description}\r\n                                    </Hero.Description>                                   \r\n                                    <HeroOptions data={data} />\r\n                                </Hero.Container>                      \r\n                            </BackgroundImage>                                \r\n                            </Hero>                                                \r\n                        {data.addresses && <Location addresses={data.addresses} location={{lat: data.latitude, long: data.longitude}} />}\r\n                        <Hiking lat={data.latitude} long={data.longitude} />\r\n                        {data.activities && <Activities list={data.activities} />}\r\n                        <Articles parkID={parkID} />\r\n                        {data.topics && <Activities list={data.topics} title={\"Topics\"} />}                                                                      \r\n                    </>\r\n                    : \"No data son!\"}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ParkPage;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function NavBar () {\r\n    return (\r\n        <div className={\"container\"}>        \r\n            <div className={\"row\"}>\r\n                <div className={\"col-12\"}>\r\n                    <Link to={\"/\"} >Home</Link>                \r\n                </div>                \r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Switch, Route } from 'react-router';\r\nimport Home from './Home';\r\nimport ParkPage from './ParkPage';\r\nimport NavBar from './Components/NavBar';\r\n\r\nexport default function Routes() {\r\n    return (\r\n        <div>\r\n            <header>\r\n                <NavBar />\r\n            </header>            \r\n            <article>\r\n                <Switch>                    \r\n                    <Route exact path=\"/\" component={Home} />\r\n                    <Route exact path=\"/national-parks\" component={Home} />\r\n                    <Route path=\"/info/:parkID\" component={ParkPage} />                   \r\n                </Switch>\r\n            </article>            \r\n            <footer>\r\n                I'm a footer, bitch!\r\n            </footer>\r\n        </div>\r\n    )\r\n}","import { createBrowserHistory } from 'history';\r\nconst history = createBrowserHistory();\r\nexport default history;","import React from 'react';\r\nimport { Router } from 'react-router';\r\nimport Routes from './Routes';\r\nimport history from './services/history';\r\n\r\nclass Main extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Router history={history}>\r\n                    <Routes />\r\n                </Router>               \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Main from './Main';\r\nimport './app.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Main />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}